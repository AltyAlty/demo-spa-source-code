/*
При отрисовке приложения в браузере файлы проекта собираются в отдельные группы файлов - бандлы (bundles). При помощи
них HTTP быстрее загружает приложение. Можно сделать так, чтобы подгружалось только то, что необходимо для отображения,
а не все бандлы. Все остальное будет загружаться по необходимости. Это называется "lazy loading". В зависимости от
целей можно использовать "lazy loading" или загружать бОльшее количество бандлов. Бандлы собираются путем пробега
"WebPack" по импортам в проекте. Компоненты в "lazy loading" нужно обворачивать в "Suspense" из "ReactJS". Для этого
обварачивания мы создали этот HOC "WithSuspense.js". Далее мы используем этот HOC в компоненте "App.js" для
компонентов "DialogContainer.jsx" и "ProfileContainer.jsx".
*/

import React, {Suspense} from 'react';
/*
Подключаем сам "ReactJS", необходим везде, где мы что-то из него используем (например, JSX).
"WebPack" уже встроен в "ReactJS".
Импортируем "Suspense" для реализации "lazy loading".
*/

import Preloader from '../components/common/Preloader/Preloader'; /*Подключаем компонент "Preloader".*/


export const withSuspense = (Component) => { /*Это и есть наш HOC, который в качестве параметра принимает
какой-либо компонент.*/
    return (props) => {
        return ( /*Этот ХОК обварачивает полученный компонент в тег "Suspense" для реализации "lazy loading". Также
        в этот компонент передаются "props".*/
            <Suspense fallback={<Preloader/>}> {/*Пока будет идти загрузка компонента будет показываться
            компонент-заглушка "Preloader".*/}
                <Component {...props}/>
            </Suspense>
        )
    };
};
