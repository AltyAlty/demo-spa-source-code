import React from 'react';
import styles from './Profile.module.css';
/*Импортируем компонент "ProfileInfo".*/
import {ProfileInfo} from './ProfileInfo/ProfileInfo';
/*Импортируем компонент "MyPostsContainer".*/
import MyPostsContainer from './MyPosts/MyPostsContainer';
/*Импортируем тип "ProfileType".*/
import {ProfileType} from '../../types/types';

type PropsType = {
    /*Информация о профиле пользователя, полученная с сервера должна быть типа "ProfileType" или иметь тип null, то есть
    быть пустой.*/
    profile: ProfileType | null
    /*Данные статуса пользователя для страницы профиля должны быть строкой или иметь тип null, то есть быть пустыми.*/
    status: string | null
    /*Свойство, показывающее является ли залогиненный пользователь владельцем профиля, который в данный момент
    отображается на странице профиля, должно быть булева типа.*/
    isOwner: boolean
    /*TC для изменения данных по статусу пользователя на странице профиля должен быть функцией, которая принимает
    строковой параметр и ничего не возвращает.*/
    updateUserStatus: (status: string) => void
    /*TC для загрузки фото пользователя на странице профиля и дальнейшего его отображения в нашем приложении должен быть
    функцией, принимающей объект с фото пользователя, которое имеет тип "File" из Typescript, и ничего не
    возвращающей.*/
    saveUserPhoto: (photoFile: File) => void
    /*TC для отправки новых данных профиля пользователя на странице профиля и дальнейшего их отображения в нашем
    приложении должен быть функцией, которая принимает объект типа "ProfileType" и возвращает какой-либо промис, так как
    мы в компоненте "ProfileInfo" используем метод "then()" вместе с этим TC.*/
    saveProfile: (profile: ProfileType) => Promise<any>
};

/*"Profile" это функциональный компонент, который создан в виде стрелочной функции. "Profile" является компонентом,
который отображает профиль пользователя целиком.

Внутри компонента "Profile" используются следующие компоненты:
1. "ProfileInfo" - компонент, который содержит информацию о пользователе. Импортирован.
2. "MyPostsContainer" - контейнерный компонент для компонента "MyPosts". Импортирован.

Компонент "Profile" импортируется в файле "ProfileContainer.tsx".

При помощи деструктуризации props указываем какие именно props мы получаем:
1. "profile" - данные профиля пользователя для страницы профиля.
2. "status" - данные статуса пользователя для страницы профиля.
3. "updateUserStatus" - TC для изменения статуса пользователя на странице профиля.
4. "isOwner" - свойство, показывающее является ли залогиненный пользователь владельцем профиля, который в данный момент
отображается на странице профиля.
5. "saveUserPhoto" - TC для загрузки фото пользователя на странице профиля и дальнейшего его отображения в нашем
приложении.
6. "saveProfile" - TC для отправки новых данных профиля пользователя на странице профиля и дальнейшего их отображения в
нашем приложении.*/
export const Profile: React.FC<PropsType> = ({
                                                 profile,
                                                 status,
                                                 updateUserStatus,
                                                 isOwner,
                                                 saveUserPhoto,
                                                 saveProfile
                                             }) => {
    return (
        <div>
            {/*Далее отрисовываем компонент "ProfileInfo" и передаем ему через props необходимые для него данные.*/}
            <ProfileInfo
                /*Данные профиля пользователя для страницы профиля.*/
                profile={profile}
                /*Данные статуса пользователя для страницы профиля.*/
                status={status}
                /*TC для изменения статуса пользователя на странице профиля.*/
                updateUserStatus={updateUserStatus}
                /*Свойство, показывающее является ли залогиненный пользователь владельцем профиля, который в данный
                момент отображается на странице профиля.*/
                isOwner={isOwner}
                /*TC для загрузки фото пользователя на странице профиля и дальнейшего его отображения в нашем
                приложении.*/
                saveUserPhoto={saveUserPhoto}
                /*TC для отправки новых данных профиля пользователя на странице профиля и дальнейшего их отображения в
                нашем приложении.*/
                saveProfile={saveProfile}
            />

            {/*А также отрисовываем компонент "MyPostsContainer" помимо компонента "ProfileInfo".*/}
            <MyPostsContainer/>
        </div>
    );
};