import React from 'react';
/*
Подключаем сам "ReactJS", необходим везде, где мы что-то из него используем (например, JSX).
"WebPack" уже встроен в "ReactJS".
*/

import styles from './Preloader.module.css'; /*Подключаем стили из CSS-модуля.*/
import preloader from '../../../assets/images/preloader.gif'; /*Импортируем из ассетов анимированное изображение,
изображающее загрузку.*/


/*Создаем тип для "props". "Props" в этом компоненте должны обязательно содержать следующие поля с указанными типами.
Все это нужно для указания типа "props" в функциональном компоненте.*/
type PropsType = {};


/*
"Preloader" это функциональный компонент, который создан в виде стрелочной функции.
При взаимодействии с функциональным компонентом React не хранит его постоянно в памяти.
React вызывает функциональный компонент, он делает свою работу (например, возвращает JSX) и компонент удаляется
из памяти.
Функциональный компонент можно создать еще и таким образом: function Preloader(props) {тело}.
Компонент это функция, которая возвращает JSX.
JSX совмещает в себе JS и HTML.
В JSX для указания класса в стилях нужно использовать "className" вместо "class".
В JSX скобки {} позволяют использовать JS-код внутри HTML-кода.
Каждый компонент это новый тег для ReactJS, и эти теги используются для вызова этих компонентов.
Теги компонентов можно вкладывать друг в друга, тем самым образуя дерево компонентов.
Каждый компонент желательно помещать в отдельный файл.
Каждый компонент всегда вызывается с объектом, внутри которого какие-то параметры.
Если параметры не указаны, то им все равно передается пустой объект в качестве параметров.
Принято объект с параметрами именовать как "props".
Вызывая тег компонента и передавая ему атрибуты, мы отдаем ему параметры.
"Preloader" является компонентом-заглушкой, который используется, чтобы показать анимацию загрузки в других компонентах,
когда идет какой-то процесс в них (например, AJAX-запрос).
Этот компонент подключается в компонентах "App", "ProfileInfo", "UsersContainer", и в HOC "WithSuspense".
*/
export const Preloader: React.FC<PropsType> = (props) => { /*Указали при помощи "React.FC<>",
что "props" в этом функциональном компоненте имеют тип "PropsType". Также указали, что экспортируем этот компонент.*/

    /*
    Здесь после return в компоненте начинается HTML разметка.
    Нужно помнить, что в этой разметке должен быть только один корневой элемент.
    Поскольку то, что возвращает return указано с новой строки, поэтому все возвращаемое помещено в круглые скобки.
    */
    return (
        <div className={styles.preloader}> {/*Этот элемент "div" и есть наш корневой элемент.*/}
            <img alt='' src={preloader}/> {/*Отрисовываем элемент "img" с изображением анимации загрузки.*/}
        </div>
    )
};