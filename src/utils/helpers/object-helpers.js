/*
Чтобы избавиться от повторяющегося кода в "users-reducer.ts" в "reducer" в "FOLLOW" и "UNFOLLOW", мы создали
этот файл, который содержит общую логику для "FOLLOW" и "UNFOLLOW". При помощи этой логики можно перебирать
элемента (объекты) в любом массиве и менять какое-либо свойство при срабатывании условия у какого-то
элемента (объекта) в этом массиве.
*/

export const updateObjectInArray = (items, itemID, objPropName, newObjProps) => {
    /*
    "items" - будет получать массив объектов (информация о пользователях для постраничного вывода из "state"
    для "FOLLOW" и "UNFOLLOW").
    "itemID" - значение для сравнения при поиске нужного объекта в массиве ("ID" пользователя для фолловинга из
    объекта "action" для "FOLLOW" и "UNFOLLOW").
    "objPropName" - имя свойства в объектах, по которому идет проверка сравнением ('id' для "FOLLOW" и "UNFOLLOW").
    "newObjProps" - объект со свойствами и их значениями, который нужно подменить на место старого в найденном объекте
    ("{followed: true}" для фолловинга и "{followed: false}" для анфолловинга для "FOLLOW" и "UNFOLLOW").
    */
    return items.map(u => { /*Мапим полученный массив объектов. "u" - это каждый элемент массива. Метод "map" возвращает
    новый массив в итоге на основе полученного массива.*/
        if (u[objPropName] === itemID) { /*(Вспомним, что "u.id" и "u["id"]" это одно и тоже) Если у какого-либо
        элемента (объекта, содержащего информацию о пользователе для постраничного вывода в случае для "FOLLOW" и
        "UNFOLLOW") массива указанное свойство "objPropName" ("u.id", то есть "ID" пользователя в случае для "FOLLOW" и
        "UNFOLLOW") равно значению для сравнения "itemID" (из объекта "action" там будет "ID" пользователя для
        фолловинга/анфолловинга для "FOLLOW" и "UNFOLLOW"),*/
            return {...u, ...newObjProps} /*то делаем деструктуризацию этого элемента (объекта, содержащего информацию о
            пользователе для постраничного вывода в случае для "FOLLOW" и "UNFOLLOW") и подменяем ему указанное свойство
            со значением в "newObjProps" за место старого значения этого свойства ("{followed: true}" для фолловинга и
            "{followed: false}" для анфолловинга для "FOLLOW" и "UNFOLLOW").*/
        }
        return u; /*Если же условие выше не срабатывает, то "map" вернет элемент массива как есть.*/
    }) /*В итоге "map" соберет новый массив с теми же объектами, где у одного из них измениться значение одного из
    свойств ("{followed: true}" для фолловинга и "{followed: true}" для анфолловинга для "FOLLOW" и "UNFOLLOW")*/
};