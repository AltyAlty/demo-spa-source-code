import {instance} from './api';

/*Создаем тип для промиса, который будет возвращаться из GET-запроса в запросе "getCaptchaURL()" из объекта с запросами
"securityAPI".*/
type getCaptchaURLResponseType = {
    /*Информация о пути к изображению с капчей должна быть строкой.*/
    url: string
};

/*Объект "securityAPI" содержит запросы, связанные с безопасностью нашего приложения.*/
export const securityAPI = {
    /*Если нашему серверу необходимо, чтобы мы ввели капчу после нескольких неудачных попыток залогиниться, то он
    сообщит браузеру, что тот должен сделать запрос на специальный endpoint и в ответ получить картинку с капчей (в виде
    объекта, содержащего URL). Эта функция является запросом на получение капчи.*/
    getCaptchaURL() {
        return (
            /*Указываем что добавляется к базовому URL внутри "instance", чтобы отправить запрос на сервер для получения
            капчи. Указываем, что этот GET-запрос возвращает промис с типом "getCaptchaURLResponseType".*/
            instance.get<getCaptchaURLResponseType>(`security/get-captcha-url`)
                /*Метод "then()" создает промис. Какие-то данные придут от сервера и выполниться стрелочная функция c
                объектом "response". Данные, которые конкретно будут нужны нам, будут находиться внутри свойства
                "response.data". Это свойство "data" создается самим запросом и туда помещается информация от сервера.

                Сама же структура данных в свойстве "data" определяется сервером. Согласно API сервера там находится
                строковое свойство "url", в котором указан URL капчи.

                Получив ответ от сервера в виде нужных данных, возвращаем их далее, чтобы установить их в наш state при
                помощи TC "getCaptchaURL()".*/
                .then(response => response.data)
        );
    }
};