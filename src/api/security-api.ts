/*
Этот файл специально создан, чтобы в одном месте описать все AJAX-запросы на сервер, касающиеся защиты нашего приложения
(например, капчи), чтобы компоненты не создавали "side effects" такого типа. Этот файл отвечает за "DAL" -
"Data Access Layer".
*/

import {instance} from './api'; /*Импортируем "instance" для более быстрого создания запросов.*/


/*Создаем тип для промиса, который будет возвращаться из запроса "GET" в "getCaptchaURL" из "securityAPI".*/
type getCaptchaURLResponseType = { /*Промис должен содержать объект, который состоит из следующих свойств с указанными
типами.*/
    url: string /*Информация о пути к изображению с капчей должна быть строкой.*/
};


export const securityAPI = { /*"usersAPI" содержит запросы, связанные с безопасностью.*/
    getCaptchaURL() { /*Если нашему серверу необходимо, чтобы мы ввели капчу после нескольких неудачных попыток
    залогиниться, то он сообщит браузеру, что тот должен сделать запрос на специальный "endpoint" и в ответ получить
    картинку с капчей (в виде объекта, содержащего URL). Эта функция является запросом на получение капчи.*/
        return (
            instance.get<getCaptchaURLResponseType>(`security/get-captcha-url`) /*Указываем, что добавляем к
            базовому URL, указанному в "instance", чтобы отправить запрос на сервер для получения капчи. Указали, что
            этот запрос "GET" возвращает промис с типом "getCaptchaURLResponseType".*/
                .then(response => response.data)/*"then" создает "promise". Какие-то данные придут от сервера и
                выполниться стрелочная функция "response". Данные, которые конкретно будут нужны нам, будут находиться
                внутри "response.data". Это "data" создается самим запросом и туда помещается информация от сервера.
                Сама же структура данных в "data" определяется сервером. Согласно API сервера там находится строковой
                элемент "url", в котором указан URL капчи.
                Затем получив ответ от сервера в виде нужных данных, возвращаем их далее, чтобы установить их в наш
                "state" при помощи TC "getCaptchaURL" в "auth-reducer.ts".*/
        );
    }
};